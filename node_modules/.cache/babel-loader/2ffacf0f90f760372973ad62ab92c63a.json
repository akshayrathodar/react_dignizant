{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/dig/src/Components/products.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getProduct } from '../Apis/callApis';\nimport { Cardlist } from '../Elements/Cardlist';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { productList } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prodData: []\n    };\n    console.log(props);\n  }\n\n  componentDidMount() {\n    this.setState({\n      prodData: this.props.products\n    });\n\n    if (!this.props.login) {\n      this.props.history.push('/');\n    }\n\n    getProduct().then(data => {\n      if (data.data[0].status) {\n        this.props.productList(data.data[0].data); // this.setState({prodData:data.data[0].data})\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/addprod\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Go To Add Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            children: this.state.prodData.map((datas, index) => {\n              return /*#__PURE__*/_jsxDEV(Cardlist, {\n                name: datas.product_name,\n                price: datas.product_price,\n                image: datas.image,\n                descr: datas.descr\n              }, datas.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login,\n    products: state.products\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    productList: stat => dispatch(productList(stat))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","map":{"version":3,"sources":["/opt/lampp/htdocs/dig/src/Components/products.js"],"names":["React","connect","getProduct","Cardlist","Link","Grid","productList","Products","Component","constructor","props","state","prodData","console","log","componentDidMount","setState","products","login","history","push","then","data","status","catch","err","render","map","datas","index","product_name","product_price","image","descr","id","mapStateToProps","mapDispatchToProps","dispatch","stat"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { connect } from \"react-redux\";\nimport { getProduct } from '../Apis/callApis';\nimport { Cardlist } from '../Elements/Cardlist';\n\n\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport { productList } from '../actions/index';\n\n\nclass Products extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prodData:[]\n        }\n        console.log(props);\n    }\n\n    componentDidMount() {\n        this.setState({prodData:this.props.products});\n\n        if(!this.props.login) {\n            this.props.history.push('/');   \n        }\n        getProduct().then((data)=>{\n            if(data.data[0].status) {\n                this.props.productList(data.data[0].data);\n                // this.setState({prodData:data.data[0].data})\n            }\n            \n        }).catch((err)=>{\n            console.log(err);\n        })\n    }\n    \n\n    render() {\n        return (\n            <>\n                <h1>Product Page</h1>\n                <Link to=\"/addprod\"><h4>Go To Add Products</h4></Link>\n                <Grid container >\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\">\n                {this.state.prodData.map((datas,index)=>{\n                    return <Cardlist key={datas.id} name={datas.product_name} price={datas.product_price} image={datas.image} descr={datas.descr} />\n                })}\n                    </Grid>\n                    </Grid>\n                    </Grid>\n                \n            </>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return { login: state.login , products: state.products };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        productList: stat => dispatch(productList(stat))\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Products);"]},"metadata":{},"sourceType":"module"}